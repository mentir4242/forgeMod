graph {
    padding: 40px;
 }


node {
    text-mode: hidden;
    text-alignment: under;
    text-background-mode: rounded-box;
	shape: box;
    size-mode: fit;
    fill-mode:plain;
    stroke-mode:plain;
    size: 40, 40, 40;
    fill-color:white;
    padding:2,2,2;
}

node:clicked {
    size: 60, 60, 60;
}


node.clickedPerm {
    size: 60, 60;
}

//appears to be not working
node:selected  {
//size: 100,100,100;
}

node.REPEATER_ON {
    stroke-color: red;
    size-mode: normal;
    fill-mode: image-scaled;
    fill-image: url('file:///Users/Ludwig/Desktop/uni/bachelor/run/GraphPics/MC_Repeater_on.png');
}

node.REPEATER_OFF {
stroke-color: blue;
    size-mode: normal;
    fill-mode: image-scaled;
    fill-image: url('file:///Users/Ludwig/Desktop/uni/bachelor/run/GraphPics/MC_Repeater_off.png');
}

node.REPEATER {
    size-mode: normal;
    fill-mode: image-scaled;
    fill-image: url('file:///Users/Ludwig/Desktop/uni/bachelor/run/GraphPics/MC_Repeater.png');
}


node.COMPARATOR_ON {
    stroke-color: red;
    size-mode: normal;
    fill-mode: image-scaled;
    fill-image: url('file:///Users/Ludwig/Desktop/uni/bachelor/run/GraphPics/MC_Comparator_ON.png');
}
node.COMPARATOR_OFF {
    stroke-color: blue;
    size-mode: normal;
    fill-mode: image-scaled;
    fill-image: url('file:///Users/Ludwig/Desktop/uni/bachelor/run/GraphPics/MC_Comparator_OFF.png');
}

node.COMPARATOR {
    size-mode: normal;
    fill-mode: image-scaled;
    fill-image: url('file:///Users/Ludwig/Desktop/uni/bachelor/run/GraphPics/MC_Comparator.png');
}


node.TORCH_ON {
    stroke-color: red;
    size-mode: normal;
    fill-mode: image-scaled;
    fill-image: url('file:///Users/Ludwig/Desktop/uni/bachelor/run/GraphPics/MC_Torch_on.png');
}
node.TORCH_OFF {
    stroke-color: blue;
    size-mode: normal;
    fill-mode: image-scaled;
    fill-image: url('file:///Users/Ludwig/Desktop/uni/bachelor/run/GraphPics/MC_Torch_off.png');
}

node.TORCH {
    size-mode: normal;
    fill-mode: image-scaled;
    fill-image: url('file:///Users/Ludwig/Desktop/uni/bachelor/run/GraphPics/MC_Torch.png');
}



node.LEVER_ON {
    stroke-color: red;
    size-mode: normal;
    fill-mode: image-scaled;
    fill-image: url('file:///Users/Ludwig/Desktop/uni/bachelor/run/GraphPics/MC_Lever_on.png');
}
node.LEVER_OFF {
    stroke-color: blue;
    size-mode: normal;
    fill-mode: image-scaled;
    fill-image: url('file:///Users/Ludwig/Desktop/uni/bachelor/run/GraphPics/MC_Lever_off.png');
}
node.LEVER {
    size-mode: normal;
    fill-mode: image-scaled;
    fill-image: url('file:///Users/Ludwig/Desktop/uni/bachelor/run/GraphPics/MC_Lever.png');
}


node.INPUT_OFF {
    stroke-color: blue;
    size-mode: normal;
    fill-mode: image-scaled;
    fill-image: url('file:///Users/Ludwig/Desktop/uni/bachelor/run/GraphPics/MC_Input_off.png');
}

node.INPUT_ON {
    stroke-color: red;
    size-mode: normal;
    fill-mode: image-scaled;
    fill-image: url('file:///Users/Ludwig/Desktop/uni/bachelor/run/GraphPics/MC_Input_on.png');
}

node.INPUT {
    size-mode: normal;
    fill-mode: image-scaled;
    fill-image: url('file:///Users/Ludwig/Desktop/uni/bachelor/run/GraphPics/MC_Input.png');
}

node.BUTTON {
    size-mode: normal;
    fill-mode: image-scaled;
    fill-image: url('file:///Users/Ludwig/Desktop/uni/bachelor/run/GraphPics/MC_Button.png');
}
node.BUTTON_ON {
    stroke-color: red;
    size-mode: normal;
    fill-mode: image-scaled;
    fill-image: url('file:///Users/Ludwig/Desktop/uni/bachelor/run/GraphPics/MC_Button_on.png');
}
node.BUTTON_OFF {
    stroke-color: blue;
    size-mode: normal;
    fill-mode: image-scaled;
    fill-image: url('file:///Users/Ludwig/Desktop/uni/bachelor/run/GraphPics/MC_Button_off.png');
}



edge.indirectEdge {
    fill-mode: none;
    stroke-mode: dots;
    stroke-color: black;
}
edge.ReaperterEdgeAtLockPosition {
    fill-color: blue;
}
edge.ComparatorEdgeAtSubtractspot {
    fill-color: red;
}

edge.Powered {
    fill-color: red,blue;
    //gradient-radial;
    //testing purpose
    //stroke-mode: dots;
}
edge.Unpowered {
    fill-color: blue,red;
    //fill-mode: gradient-radial;
    //testing purpose
    //stroke-mode: dots;
}
edge.PoweredButNotReaching {
    fill-color: red;
    //gradient-radial;
    stroke-mode: dots;
}

node.Powered{
    stroke-color: red;
}

node.Unpowered{
    stroke-color: blue;
}